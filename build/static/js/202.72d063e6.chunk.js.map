{"version":3,"file":"static/js/202.72d063e6.chunk.js","mappings":"mOACA,EAAwB,qBAAxB,EAAoD,oB,6BCoHpD,EA3Gc,WACZ,IAAMA,GAAQC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,YAAYH,KAAK,IAEtDI,GAAgBC,EAAAA,EAAAA,UAChBC,GAAmBD,EAAAA,EAAAA,UAEnBE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACJX,GACFS,EAAS,QAEb,GAAG,CAACT,IAEJ,IAAMY,EAAa,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOC,GAAC,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAP,EAAAA,EAAAA,KAAAQ,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAKkC,OAH9DR,EAAES,iBAEIR,EAAuBf,EAAcwB,QAAQC,MAC7CT,EAA0Bd,EAAiBsB,QAAQC,MAAKL,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAE1CI,MAChBC,kDACA,CACEC,YAAa,UACbC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBC,MAAOnB,EACPoB,SAAUnB,MAGd,KAAD,EAbQ,OAAHC,EAAGG,EAAAgB,KAAAhB,EAAAE,KAAA,EAeUL,EAAIoB,OAAO,KAAD,EAAnB,OAAJnB,EAAIE,EAAAgB,KAAAhB,EAAAE,KAAA,GAGWJ,EAAKoB,OAAO,KAAD,GAApB,GAAAlB,EAAAgB,KACA,CAADhB,EAAAE,KAAA,SACsB,MAA/BiB,EAAAA,GAAAA,MAAY,GAADC,OAAItB,EAAKuB,UACd,IAAIC,MAAM,kBAAkB,KAAD,GAEnCH,EAAAA,GAAAA,QAAc,mBAEdI,eAAeC,QAAQ,QAAS1B,EAAKtB,OACrC+C,eAAeC,QAAQ,SAAU1B,EAAK2B,MACtC1C,EACE2C,EAAAA,EAAAA,MAAyB,CACvBlD,MAAOsB,EAAKtB,MACZ0C,OAAQpB,EAAKoB,OACbO,KAAM3B,EAAK2B,QAgBfxC,EAAS,SAAUe,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAA2B,GAAA3B,EAAA,SAEnB4B,QAAQC,IAAI7B,EAAA2B,GAAMN,SAAS,yBAAArB,EAAA8B,OAAA,GAAArC,EAAA,mBAE9B,gBA1DkBsC,GAAA,OAAA1C,EAAA2C,MAAA,KAAAC,UAAA,KA2DnB,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAcC,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,OAAKC,IAAKC,KACVN,EAAAA,EAAAA,MAAA,QAAMO,SAAUrD,EAAe+C,UAAWC,EAAaC,SAAA,EACrDC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,aACJC,EAAAA,EAAAA,KAAA,SAAOI,KAAK,OAAOC,YAAY,QAAQC,IAAKhE,KAC5C0D,EAAAA,EAAAA,KAAA,SACEI,KAAK,WACLC,YAAY,WACZC,IAAK9D,KAEPwD,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,aAERH,EAAAA,EAAAA,MAAA,MAAAG,SAAA,CAAI,wBACkBC,EAAAA,EAAAA,KAACO,EAAAA,GAAI,CAACC,GAAG,YAAWT,SAAC,oBAG7CC,EAAAA,EAAAA,KAACS,EAAAA,GAAc,CACbC,SAAS,aACTC,UAAW,IACXC,iBAAiB,EACjBC,aAAa,EACbC,cAAc,EACdC,KAAK,EACLC,kBAAgB,EAChBC,WAAS,EACTC,cAAY,EACZC,MAAM,YAId,EC7GA,EAJkB,WAChB,OAAOnB,EAAAA,EAAAA,KAACoB,EAAK,GACf,C","sources":["webpack://myapp/./src/components/loginPage/login.module.css?01ae","components/loginPage/Login.js","page/LoginPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"login\":\"login_login__fUtgA\",\"form\":\"login_form__bIjov\"};","import img from \"../SRCIMG/banner1.jpg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useEffect, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { currentUserActions } from \"../../store/user\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport classes from \"./login.module.css\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst Login = () => {\r\n  const token = useSelector((state) => state.currentUser.token);\r\n\r\n  const emailInputRef = useRef();\r\n  const passwordInputRef = useRef();\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      navigate(\"/home\");\r\n    }\r\n  }, [token]);\r\n\r\n  const signInHandler = async (e) => {\r\n    //click login\r\n    e.preventDefault();\r\n\r\n    const enteredEmailInputRef = emailInputRef.current.value; //lay gia tri tu input\r\n    const enteredPasswordInputRef = passwordInputRef.current.value;\r\n    try {\r\n      const res = await fetch(\r\n        process.env.REACT_APP_API_URL + \"/auth/adminlogin\",\r\n        {\r\n          credentials: \"include\",\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            email: enteredEmailInputRef,\r\n            password: enteredPasswordInputRef,\r\n          }),\r\n        }\r\n      );\r\n\r\n      const data = await res.json();\r\n      // console.log(\"data\", data);\r\n\r\n      const userId = await data.userId;\r\n      if (!userId) {\r\n        toast.error(`${data.message}`);\r\n        throw new Error(\"Login failed !\");\r\n      }\r\n      toast.success(\"Login success !\");\r\n\r\n      sessionStorage.setItem(\"token\", data.token);\r\n      sessionStorage.setItem(\"isUser\", data.name);\r\n      dispatch(\r\n        currentUserActions.login({\r\n          token: data.token,\r\n          userId: data.userId,\r\n          name: data.name,\r\n        })\r\n      );\r\n      // const cartTotal = await cart.json();\r\n      // dispatch(\r\n      //   cartActions.changeProductQuantity({ totalProduct: cartTotal.length })\r\n      // );\r\n      // localStorage.setItem(\"cartTotal\", cartTotal.length);\r\n      // dispatch(cartActions.changeCart({ cart: cartTotal }));\r\n      // dispatch(\r\n      //   currentUserActions.login({\r\n      //     email: enteredEmailInputRef,\r\n      //     token: data.token,\r\n      //     userId: data.userId,\r\n      //   })\r\n      // ); // gui dispatch de luu email user hien tai\r\n      navigate(\"/home\"); //dang nhap thanh cong, chuyen trang home\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n  return (\r\n    <div className={classes.login}>\r\n      <img src={img}></img>\r\n      <form onSubmit={signInHandler} className={classes.form}>\r\n        <h1>Sign In</h1>\r\n        <input type=\"text\" placeholder=\"Email\" ref={emailInputRef}></input>\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          ref={passwordInputRef}\r\n        ></input>\r\n        <button>SIGN IN</button>\r\n        {/* Goi y chua co tai khoan thi chuyen den trang dang ky  */}\r\n        <h3>\r\n          Create an account ? <Link to=\"/register\"> Sign up</Link>\r\n        </h3>\r\n      </form>\r\n      <ToastContainer\r\n        position=\"top-center\"\r\n        autoClose={2000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick={false}\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n        theme=\"light\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import Login from \"../components/loginPage/Login\";\r\n\r\nconst LoginPage = () => {\r\n  return <Login />;\r\n};\r\n\r\nexport default LoginPage;\r\n"],"names":["token","useSelector","state","currentUser","emailInputRef","useRef","passwordInputRef","dispatch","useDispatch","navigate","useNavigate","useEffect","signInHandler","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","enteredEmailInputRef","enteredPasswordInputRef","res","data","wrap","_context","prev","next","preventDefault","current","value","fetch","process","credentials","method","headers","body","JSON","stringify","email","password","sent","json","userId","toast","concat","message","Error","sessionStorage","setItem","name","currentUserActions","t0","console","log","stop","_x","apply","arguments","_jsxs","className","classes","children","_jsx","src","img","onSubmit","type","placeholder","ref","Link","to","ToastContainer","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","theme","Login"],"sourceRoot":""}