{"version":3,"file":"static/js/840.26a3d65e.chunk.js","mappings":"kLACA,EAAkC,kCAAlC,EAA2E,uBAA3E,EAA4G,0BAA5G,EAA8I,wBAA9I,EAAiL,2BAAjL,EAAyN,6BAAzN,EAAwQ,kCAAxQ,EAA6T,mCAA7T,EAAyW,yBAAzW,EAA4Y,0B,6BCKtYA,GAASC,EAAAA,EAAAA,IAAW,gCAAiC,CACzDC,WAAY,CAAC,eAqFf,EAnFiB,WACf,IAAMC,GAASC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,YAAYH,MAAM,IAG9DI,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,GAAsCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA3CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAE5BG,EAAa,CAAC,OAAQ,OAAQ,SAEpCjB,EAAOkB,GAAG,mBAAmB,SAACC,GAC5BP,EAAW,GAADQ,QAAAC,EAAAA,EAAAA,GAAKV,GAAO,CAAEQ,IAC1B,IAmBA,OACEG,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAwBC,SAAA,EACtCH,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAaC,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,SAAOC,YAAY,oBACnBD,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAgBC,SAE7BR,GACCA,EAAWW,KAAI,SAACC,EAAKC,GACnB,OAAOJ,EAAAA,EAAAA,KAAA,MAAAD,SAAiBI,GAARC,EAClB,UAGNR,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAcC,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAmBC,SAChCd,EAAQoB,OAAS,GAChBpB,EAAQiB,KAAI,SAACC,EAAKC,GAChB,OACEJ,EAAAA,EAAAA,KAAA,OAEEH,UACEM,EAAIG,SAAW7B,EACXqB,EACAA,EACLC,UAEDC,EAAAA,EAAAA,KAAA,QACEH,UACEM,EAAIG,SAAW7B,EAASqB,EAAkBA,EAC3CC,SAEAI,EAAIG,SAAW7B,EACZ0B,EAAII,QACJJ,EAAIK,KAAO,MAAQL,EAAII,WAdxBH,EAkBX,OAEJR,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAiBC,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,SACEC,YAAY,iBACZQ,SAAU,SAACC,GACTpB,EAAeoB,EAAEC,OAAOC,MAC1B,EACAA,MAAOvB,KAETW,EAAAA,EAAAA,KAAA,UAAQa,QArDW,SAACH,GAE1BI,QAAQC,IAAI1B,GACZf,EAAO0C,KAAK,gBAAiB,CAAEV,OAAQ7B,EAAQ8B,QAASlB,IACxDH,EAAW,GAADQ,QAAAC,EAAAA,EAAAA,GAAKV,GAAO,CAAE,CAAEqB,OAAQ7B,EAAQ8B,QAASlB,MACnDC,EAAe,GACjB,EA+C4CS,SAAC,iBAK/C,ECpFA,EAJqB,WACnB,OAAOC,EAAAA,EAAAA,KAACiB,EAAQ,GAClB,C","sources":["webpack://myapp/./src/components/livechat/livechat.module.css?8dc5","components/livechat/Livechat.js","page/LivechatPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"livechatWrapper\":\"livechat_livechatWrapper__6J9VL\",\"left\":\"livechat_left__iRx32\",\"contact\":\"livechat_contact__xvB3o\",\"right\":\"livechat_right__1QP5e\",\"chatType\":\"livechat_chatType__mLNHp\",\"chatRender\":\"livechat_chatRender__19Ync\",\"chatMessageLeft\":\"livechat_chatMessageLeft__3apB-\",\"chatMessageRight\":\"livechat_chatMessageRight__N4Gyj\",\"client\":\"livechat_client__v5zP1\",\"support\":\"livechat_support__ZDeUl\"};","import { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport classes from \"./livechat.module.css\";\r\nimport openSocket from \"socket.io-client\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst socket = openSocket(\"wss://shy-roan-roll.glitch.me\", {\r\n  transports: [\"websocket\"],\r\n});\r\nconst Livechat = () => {\r\n  const userId = useSelector((state) => state.currentUser.userId);\r\n\r\n  //use Use Debounce to improve\r\n  const [message, setMessage] = useState([]);\r\n  const [userMessage, setUserMessage] = useState(\"\");\r\n\r\n  const DUMMY_USER = [\"Alex\", \"John\", \"Sahra\"];\r\n\r\n  socket.on(\"support-receive\", (clientMess) => {\r\n    setMessage([...message, clientMess]);\r\n  });\r\n\r\n  // useEffect(() => {\r\n  //   setMessage(DUMMY);\r\n  // }, []);\r\n\r\n  // window.addEventListener(\"keypress\", (event) => {\r\n  //   if (event.key === \"Enter\" && userMessage?.trim() !== \"\") {\r\n  //     sendMessageHandler();\r\n  //   }\r\n  // });\r\n\r\n  const sendMessageHandler = (e) => {\r\n    // e.preventDefault();\r\n    console.log(userMessage);\r\n    socket.emit(\"support-reply\", { sender: userId, content: userMessage });\r\n    setMessage([...message, { sender: userId, content: userMessage }]);\r\n    setUserMessage(\"\");\r\n  };\r\n  return (\r\n    <div className={classes.livechatWrapper}>\r\n      <div className={classes.left}>\r\n        <input placeholder=\"Search contact\"></input>\r\n        <div className={classes.contact}>\r\n          {/* icons */}\r\n          {DUMMY_USER &&\r\n            DUMMY_USER.map((ele, index) => {\r\n              return <h3 key={index}>{ele}</h3>;\r\n            })}\r\n        </div>\r\n      </div>\r\n      <div className={classes.right}>\r\n        <div className={classes.chatRender}>\r\n          {message.length > 0 &&\r\n            message.map((ele, index) => {\r\n              return (\r\n                <div\r\n                  key={index}\r\n                  className={\r\n                    ele.sender === userId\r\n                      ? classes.chatMessageRight\r\n                      : classes.chatMessageLeft\r\n                  }\r\n                >\r\n                  <span\r\n                    className={\r\n                      ele.sender === userId ? classes.support : classes.client\r\n                    }\r\n                  >\r\n                    {ele.sender === userId\r\n                      ? ele.content\r\n                      : ele.name + \" : \" + ele.content}\r\n                  </span>\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n        <div className={classes.chatType}>\r\n          <input\r\n            placeholder=\"Typing here...\"\r\n            onChange={(e) => {\r\n              setUserMessage(e.target.value);\r\n            }}\r\n            value={userMessage}\r\n          ></input>\r\n          <button onClick={sendMessageHandler}>Send</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Livechat;\r\n","import Livechat from \"../components/livechat/Livechat\";\r\n\r\nconst LivechatPage = () => {\r\n  return <Livechat />;\r\n};\r\n\r\nexport default LivechatPage;\r\n"],"names":["socket","openSocket","transports","userId","useSelector","state","currentUser","_useState","useState","_useState2","_slicedToArray","message","setMessage","_useState3","_useState4","userMessage","setUserMessage","DUMMY_USER","on","clientMess","concat","_toConsumableArray","_jsxs","className","classes","children","_jsx","placeholder","map","ele","index","length","sender","content","name","onChange","e","target","value","onClick","console","log","emit","Livechat"],"sourceRoot":""}